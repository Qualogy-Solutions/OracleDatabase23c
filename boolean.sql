/*
 * script name : boolean.sql
 * description : accompanying script for the blog at 
 *               https://www.werkenbijqualogy.com/blog/27/the-boolean-datatype
 */
clear screen
set serveroutput on size unlimited format wrapped

-- first cleanup the demo tables if they exist
drop table if exists booleandemo
/

-- create a table to hold the boolean values
create table if not exists booleandemo
( id    number         generated by default on null as identity
, text  varchar2( 32 )
, value boolean
)
/

-- insert some 'real' boolean values
insert into booleandemo
  ( text,    value ) 
values
  ( q'[true]',      true    ) -- equals to true
, ( q'[false]',     false   ) -- equals to false
, ( q'[null]',      null    ) -- equals to null
/

-- insert some numeric values that get converted to boolean values
insert into booleandemo
  ( text, value ) 
values
  ( q'[-1]',        -1      ) -- equals to true
, ( q'[0]',         0       ) -- equals to false
, ( q'[1]',         1       ) -- equals to true
, ( q'[2]',         2       ) -- equals to true
/

-- insert some character values that get converted to boolean values
insert into booleandemo
  ( text,        value   ) 
values
  ( q'['t']',     't'     ) -- equals to true
, ( q'['f']',     'f'     ) -- equals to false
, ( q'['true']',  'true'  ) -- equals to true
, ( q'['false']', 'false' ) -- equals to false
, ( q'['on']',    'on'    ) -- equals to true
, ( q'['off']',   'off'   ) -- equals to false
, ( q'['yes']',   'yes'   ) -- equals to true
, ( q'['no']',    'no'    ) -- equals to false
, ( q'['y']',     'y'     ) -- equals to true
, ( q'['n']',     'n'     ) -- equals to false
/

-- select the data from the table
-- you need a 23c (or later) client to display the boolean values
select *
from   booleandemo
/

-- make sure the parameter is set to true
alter session set PLSQL_IMPLICIT_CONVERSION_BOOL=true
/

-- display a boolean value directly from PL/SQL
declare
  v_b boolean := true;
begin
  dbms_output.put_line('my bool is: ' || v_b);
end;
/
